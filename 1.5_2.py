"""Вам дается последовательность целых чисел и вам нужно ее обработать
и вывести на экран сумму первой пятерки чисел из этой последовательности, затем сумму второй пятерки, и т. д.

Но последовательность не дается вам сразу целиком. С течением времени к вам поступают её последовательные части.
Например, сначала первые три элемента, потом следующие шесть, потом следующие два и т. д.

Реализуйте класс Buffer, который будет накапливать в себе элементы последовательности
и выводить сумму пятерок последовательных элементов по мере их накопления.

Одним из требований к классу является то, что он не должен хранить в себе больше элементов, чем ему действительно необходимо,
т. е. он не должен хранить элементы, которые уже вошли в пятерку, для которой была выведена сумма."""


class Buffer:
    def __init__(self):
        # конструктор без аргументов
        self.current_seq = []

    def add(self, *a):
        # добавить следующую часть последовательности
        self.current_seq.extend(a)
        while len(self.current_seq) >= 5:
            print(sum(self.current_seq[:5]))
            del self.current_seq[:5]

    def get_current_part(self):
        # вернуть сохраненные в текущий момент элементы последовательности в порядке, в котором они были добавлены
        return self.current_seq