"""Реализуйте программу, которая будет эмулировать работу с пространствами имен.
Необходимо реализовать поддержку создания пространств имен и добавление в них переменных.

В данной задаче у каждого пространства имен есть уникальный текстовый идентификатор – его имя.

Вашей программе на вход подаются следующие запросы:

create <namespace> <parent> –  создать новое пространство имен с именем <namespace> внутри пространства <parent>
add <namespace> <var> – добавить в пространство <namespace> переменную <var>
get <namespace> <var> – получить имя пространства, из которого будет взята переменная <var> при запросе из пространства <namespace>,
 или None, если такого пространства не существует

 Формат входных данных

В первой строке дано число n (1 ≤ n ≤ 100) – число запросов.
В каждой из следующих n строк дано по одному запросу.
Запросы выполняются в порядке, в котором они даны во входных данных.
Имена пространства имен и имена переменных представляют из себя строки длины не более 10, состоящие из строчных латинских букв.

Формат выходных данных

Для каждого запроса get выведите в отдельной строке его результат.
 """


quantity = int(input())

def get(bd, nmsp, arg):
    if arg in bd[nmsp]['variables']:
        return nmsp
    if nmsp == 'global':
        return 'None'
    else:
        return get(bd, bd[nmsp]['parent'], arg)

bd = {'global': {'parent':'None', 'variables':[]}}
for _ in range(quantity):
    cmd, nmsp, arg = input().split()
    if cmd == 'create':
        bd[nmsp] = {'parent': arg, 'variables':[]}
    elif cmd == 'add':
        bd[nmsp]['variables'].append(arg)
    else:
        print(get(bd, nmsp, arg))